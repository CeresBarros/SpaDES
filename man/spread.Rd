% Generated by roxygen2 (4.0.1): do not edit by hand
\docType{methods}
\name{spread}
\alias{spread}
\title{Simulate a spread process on a landscape.}
\usage{
spread(landscape, loci, spreadProb, persistance, mask, maxSize, directions,
  iterations, ...)

\S4method{spread}{RasterLayer}(landscape, loci, spreadProb, persistance, mask,
  maxSize = ncell(landscape), directions = 8,
  iterations = ncell(landscape), plot.it = FALSE, mergeDuplicates = FALSE,
  ...)
}
\arguments{
\item{landscape}{A \code{RasterLayer} object.}

\item{loci}{A vector of locations in \code{landscape}}

\item{spreadProb}{The probability of spreading.}

\item{persistance}{A probability that a burning cell will continue to burn, per time step.}

\item{mask}{non-NULL, a \code{RasterLayer} object congruent with \code{landscape}
                     whose elements are \code{0,1}, where 1 indicates "cannot spread to".}

\item{maxSize}{The maximum number of pixels for a fire. This is currently
                     only a single number, not one for each spread event}

\item{directions}{The number adjacent cells in which to look; default is 8 (Queen case).}

\item{iterations}{Number of iterations to spread. Leaving this \code{NULL} allows the spread
                     to continue until stops spreading itself (i.e., exhausts itself).}

\item{plot.it}{If TRUE, then plot the raster at every iteraction, so one can watch the
spread event grow.}

\item{mergeDuplicates}{Logical. While spreading is occuring, and the same pixel gets identified
                     as being adjacent to two different active cells, run "unique" or not. Default is FALSE.}
}
\value{
A \code{RasterLayer} indicating the spread of the process in the landscape.
}
\description{
More detailed description needed here.
}
\examples{
library(raster)
library(RColorBrewer)

# Make random forest cover map
a = raster(extent(0,1e2,0,1e2),res=1)
hab = GaussMap(a,speedup=1)
names(hab)="hab"
cells = loci = b = as.integer(sample(1:ncell(a),1e1))
mask = raster(a)
mask = setValues(mask, 0)
mask[1:5000] <- 1
numCol <- ncol(a)
numCell <- ncell(a)
directions=8

# Transparency involves putting 2 more hex digits on the color code, 00 is fully transparent
cols = list(c("#00000000",brewer.pal(8,"RdYlGn")[8:1]),brewer.pal(9,"Greys"),brewer.pal(8,"Spectral"))

dev(2)
simPlot(hab,col=cols[[2]],speedup=1)
names(hab)<-"hab"
fire2 <- spread(hab,loci=as.integer(sample(1:ncell(hab),10)),
                0.235,0,NULL,1e8,8,1e6,mergeDuplicates = T,
                plot.it=T,col=cols[[1]],delete.previous=F,add=T,on.which.to.plot="hab",
                speedup=1)
}
\author{
Steve Cumming \email{Steve.Cumming@sbf.ulaval.ca}

Eliot McIntire
}

