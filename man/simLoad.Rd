% Generated by roxygen2 (4.0.1): do not edit by hand
\docType{methods}
\name{simLoad}
\alias{simLoad}
\title{Load simulation objects according to fileList}
\usage{
simLoad(sim, stackName = NULL)
}
\arguments{
\item{sim}{A \code{simList} object}

\item{stackName}{String or Null, the default. If a string, then all rasters will be put into
a single RasterStack object, with name given.}
}
\description{
This function takes the fileList argument in the simList object and loads all the files
using the identified functions and arguments
}
\details{
In the fileList object, either a list or a data.frame, there will be minimally a column called "files".
All other columns are optional.

Other optional columns are:

- "objs", a character string indicating the name of the object once the
file is loaded.

- "funs", a character string indicating the function to be used to load the file

- "intervals", a numeric indicating the interval between repeated loading of the same
file. This should be NA or the column absent if the file is only loaded once.

- "loadTime", a numeric indicating when the file should be loaded. Defaults to simTime = 0,
but this can be any time. The loading will be scheduled to occur at the "loadTime",
whatever that is. If the same file is to loaded many times, but not at a regular interval,
then there should be separate line, with a unique loadTime for each.

- "args" is a list of lists of named arguments, one list for each loading function. For example, if raster
is a loading function, args = list(native = TRUE). If there is only one list, then it is assumed to apply
to all load attempts and will be repeated for each load function.
}
\examples{
#simple one - be sure to setwd first!
fileList= data.frame(files= dir(pattern = "asc"),stringsAsFactors=FALSE)
simInit("sim", times=list(start=0.0, stop=100),
  params=list(
              fileList=fileList,
              .progress=list(graphical=FALSE, interval = 10),
              habitat = list(nx=1e3, ny=1e3, toSave=c("habitat"),
                               savePath=file.path("output", "habitat"),
                               saveFreq=3, plotFreq=10,
                               interval=0, startTime=0),
              caribou=list(N=1e3, plotFreq=1, toSave=c("caribou"),
                             savePath=file.path("output","caribou"),
                             saveFreq=4, interval=1, startTime=0)),
  modules=list("habitat", "caribou"),
  path=file.path(path, "SpaDES/SAMPLE"))
sim <- simLoad(sim)
simPlot(RoadCostSurface_uaf_3)

# Second, more sophisticated. All maps loaded at time = 0, and the last one is reloaded
#  at time = 10 (via "intervals"). Also, pass the single argument as a list to all functions...
#  specifically, when add "native = TRUE" as an argument to the raster function
args = list(native=TRUE)
fileList= list(
  file = c(dir(pattern = "asc"),"C:/Rwork/Maps/LCC2005_V1_4a.tif"),
  funs = NA,
  objs = NA,
  args = args,
  loadTimes = 0,
  intervals = c(rep(NA,length(dir(pattern="asc"))),10))
simInit("sim", times=list(start=0.0, stop=100),
  params=list(
              fileList=fileList,
              .progress=list(graphical=FALSE, interval = 10),
              habitat = list(nx=1e3, ny=1e3, toSave=c("habitat"),
                               savePath=file.path("output", "habitat"),
                               saveFreq=3, plotFreq=10,
                               interval=0, startTime=0),
              caribou=list(N=1e3, plotFreq=1, toSave=c("caribou"),
                             savePath=file.path("output","caribou"),
                             saveFreq=4, interval=1, startTime=0)),
  modules=list("habitat", "caribou"),
  path=file.path(path, "SpaDES/SAMPLE"))
sim <- simLoad(sim)
}
\author{
Eliot McIntire

Alex Chubaty
}

