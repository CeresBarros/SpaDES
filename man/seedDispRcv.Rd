% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/spread-process.R
\docType{methods}
\name{seedDispRcv}
\alias{seedDispRcv}
\alias{seedDispRcv,RasterLayer-method}
\title{Simulate a seedDispRcv process on a landscape.}
\usage{
seedDispRcv(seedSrc, seedRcv = ncell(seedSrc)/2L, dispersalFn = Ward,
  effDist = 100, maxDist = 150, b = 0.01, k = 0.95, plot.it = FALSE,
  ...)

\S4method{seedDispRcv}{RasterLayer}(seedSrc, seedRcv = ncell(seedSrc)/2L,
  dispersalFn = Ward, effDist = 100, maxDist = 150, b = 0.01,
  k = 0.95, plot.it = FALSE, ...)
}
\arguments{
\item{seedSrc}{A \code{RasterLayer} object where pixels indicate the presence (or abundance) of seed source
pixels}

\item{seedRcv}{A vector of indexes (i.e., locations) within the same \code{RasterLayer} as \code{seedSrc}.}

\item{dispersalFn}{An expression that can take a "dis" argument. See details. Default is "Ward"}

\item{effDist}{Landis species- and ecoregion-specific effective distance parameter}

\item{maxDist}{Landis species- and ecoregion-specific effective distance parameter}

\item{b}{Landis ward seed dispersal calibration coefficient (set to 0.01 in Landis)}

\item{k}{Landis ward seed dispersal the probability that seed will disperse within
the effective distance (eg., 0.95)}

\item{plot.it}{If TRUE, then plot the raster at every iteraction, so one can watch the
seedDispRcv event grow.}

\item{...}{Additional parameters. Currently none}
}
\value{
A numeric vector of raster pixel indices, in the same resolution and extent as
\code{seedSrc} raster.
}
\description{
Simulate seed dispersal using user defined function. This is a "receiving pixel" focused dispersal approach.
It is the "potentially receiving" cell that looks around itself for potential seed sources. If it finds
a single seed source, that passes the probability function described by the dispersalFn, then the
cluster ends and the receiving cell index is returned as part of a vector of indices of all
successfully cells that received seeds. This function can therefore only be used for a relatively
specific situation where there is a yes/no returned for each potential receiving cell, i.e., not abundance.
This function is also not cumulative, i.e,. there is no higher abundance of seeds received if
a receiving cell has lots of seed sources around it vs. a single seed source. The difference will
come with a higher probability of successfully receiving a "seed".
}
\details{
\code{dispersalFn} must be an expression that returns a probability distribution. Because
it is a dispersal kernal, it must be a probability distribution. The expression that can
take an argument named "dis" (without quotes) as this will be calculated internally and
represents the distance from the initial (receiving) pixel and all active pixels within that
cluster of active pixels. \code{SpaDES} includes the \code{\link{Ward}} kernel as defined in the
Landis documentation.
}
\examples{
library(raster)

# Make random forest cover map
a <- raster(extent(0,1e5,0,1e5),res=100)
hab <- gaussMap(a,speedup=1) # if raster is large (>1e6 pixels), use speedup>1
names(hab)="hab"

seedSrc <- hab>5
setColors(seedSrc,1) <- c("white","black")

seedRcv <- as.integer(sample(1:ncell(hab), 1000))
system.time(seeds <- seedDispRcv(seedSrc, seedRcv=seedRcv,
  maxDist=250, plot.it=TRUE))
seedRcvRaster <- raster(seedSrc)
if(length(seeds)>0) {
  seedRcvRaster[seeds] <- 1
  Plot(seedRcvRaster, cols="black")
}
}
\author{
Eliot McIntire
}

