% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache.R
\docType{methods}
\name{clearCache}
\alias{clearCache}
\alias{clearCache,ANY-method}
\alias{showCache}
\alias{showCache,ANY-method}
\title{\code{showCache} and \code{clearCache} are wrappers around \code{archivist} package
functions, specific to simList objects.
They allow the user a bit of control over what is being cached.}
\usage{
clearCache(sim, afterDate, beforeDate, cacheRepo, userTags = character(), ...)

\S4method{clearCache}{ANY}(sim, afterDate, beforeDate, cacheRepo,
  userTags = character(), ...)

showCache(sim, cacheRepo, userTags = character(), ...)

\S4method{showCache}{ANY}(sim, cacheRepo, userTags = character(), ...)
}
\arguments{
\item{sim}{A \code{simList} simulation object, generally produced by \code{simInit}.}

\item{afterDate}{Objects cached after this date will be deleted, formatted YYYY-MM-DD.}

\item{beforeDate}{Objects cached before this date will be deleted, formatted as YYYY-MM-DD.}

\item{cacheRepo}{A repository used for storing cached objects.
This is optional if \code{Cache} is used inside a SpaDES module.}

\item{userTags}{Character. If used, this will be used in place of the \code{afterDate} and
\code{beforeDate}. Specifying a userTag here will clear all objects with that
tag exactly (no wildcards at this time). Note: user "label:value" pairs, if
named tag values are desired (see \code{\link[archivist]{Tags}})}

\item{...}{Other arguments. Currently unused.

If neither \code{afterDate} or \code{beforeDate} are provided, nor \code{userTags},
 then all objects will be removed.
If both \code{afterDate} and \code{beforeDate} are specified, then all objects between \code{afterDate} and
\code{beforeDate} will be deleted.
If \code{userTags} is used, this will override \code{afterDate} or \code{beforeDate}.}
}
\value{
Will clear all (or that match \code{userTags}, or between \code{afterDate} or \code{beforeDate})
objects from the repository located at \code{cachePath} of the sim object,
if \code{sim} is provided, or located in \code{cacheRepo} .
}
\description{
\code{showCache} and \code{clearCache} are wrappers around \code{archivist} package
functions, specific to simList objects.
They allow the user a bit of control over what is being cached.
}
\examples{
\dontrun{
clearCache(mySim)

mySim <- simInit(
  times = list(start = 0.0, end = 1.0, timeunit = "year"),
  params = list(
    .globals = list(stackName = "landscape", burnStats = "nPixelsBurned"),
    # Turn off interactive plotting
    fireSpread = list(.plotInitialTime = NA),
    caribouMovement = list(.plotInitialTime = NA),
    randomLandscapes = list(.plotInitialTime = NA, .useCache = "init")
  ),
  modules = list("randomLandscapes", "fireSpread", "caribouMovement"),
  paths = list(modulePath = system.file("sampleModules", package = "SpaDES"),
               outputPath = tmpdir,
               cachePath = tmpdir),
  # Save final state of landscape and caribou
  outputs = data.frame(objectName = c("landscape", "caribou"),
                       stringsAsFactors = FALSE)
)

sims <- spades(Copy(mySim), notOlderThan = Sys.time()) ## TO DO: fix this test

ranNums <- Cache(runif, 4, cacheRepo=cachePath(mySim), userTags = "objectName:a")

showCache(mySim)

showCache(mySim, userTags = c("objectName"))
showCache(mySim, userTags = c("a"))
showCache(mySim, userTags = c("eventTime")) # show only cached objects made during spades call

clearCache(mySim, userTags = c("eventTime")) # remove only cached objects made during spades call
showCache(mySim) # they are gone
}
\dontrun{
showCache(mySim)
}
}
\seealso{
\code{\link[archivist]{splitTagsLocal}}.
}
